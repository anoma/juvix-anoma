--- Functions that are or will be provided by the Anoma system.
module Anoma.System;

import Stdlib.Prelude open;

syntax alias PublicKey := Nat;

syntax alias Signature := Nat;

--- Get a value by key from Anoma
builtin anoma-get
axiom anomaGet : {Value Key : Type} -> Key -> Value;

--- Verifies that a signature is valid against for some data and a public key
builtin anoma-verify-detached
axiom anomaVerifyDetached : {A : Type}
  -> Signature
  -> A
  -> PublicKey
  -> Bool;

builtin anoma-sign
axiom anomaSign : {A : Type}
  -- message to sign
  -> A
  -- secret key
  -> Nat
  -- signed message
  -> Nat;

builtin anoma-verify
axiom anomaVerify : {A : Type}
  -- signed message to verify
  -> Nat
  -- public key
  -> PublicKey
  -- message with signature removed
  -> A;

builtin anoma-sign-detached
axiom anomaSignDetached : {A : Type}
  -- message to sign
  -> A
  -- secret key
  -> Nat
  -- signature
  -> Nat;

--- Encode a value
builtin anoma-encode
axiom anomaEncode : {A : Type} -> A -> Nat;

--- Decode a value
builtin anoma-decode
axiom anomaDecode : {A : Type} -> Nat -> A;
